// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Accounts {
  account_id    Int     @id @default(autoincrement()) @map("account_id")
  email         String  @unique @map("email")
  password      String  @map("password")
  account_name  String  @unique @map("account_name")
  money         Int     @map("money")     @default(10000)
  mmr           Int     @map("mmr")

  myPlayers MyPlayers[]
  squad     Squad?

  @@map("Accounts")
}

model Players {
  player_id Int     @id @default(autoincrement()) @map("player_id")
  player_name       String  @map("player_name")
  player_speed      Int  @map("player_speed")
  player_finish     Int  @map("player_finish") 
  player_power      Int  @map("player_power")  
  player_defense    Int  @map("player_defense")  
  player_stamina    Int  @map("player_stamina")

  myPlayers MyPlayers[]

  @@map("Players")
}

model MyPlayers {
  myPlayer_id   Int      @id @map("myPlayer_id")
  account_id    Int      @map("account_id")
  player_id     Int      @map("player_id")
  enhanced      Int      @map("enhanced")

  accounts      Accounts @relation(fields: [account_id], references: [account_id], onDelete: Cascade)
  players       Players  @relation(fields: [player_id], references: [player_id], onDelete: Cascade)

  squads1       Squad[]  @relation("SquadPlayer1")
  squads2       Squad[]  @relation("SquadPlayer2")
  squads3       Squad[]  @relation("SquadPlayer3")

  @@map("MyPlayers")
}

model Squad {
  squad_id      Int        @id @default(autoincrement()) @map("squad_id")
  account_id    Int        @unique @map("account_id")
  squad_player1 Int        @map("squad_player1")
  squad_player2 Int        @map("squad_player2")
  squad_player3 Int        @map("squad_player3")

  accounts      Accounts   @relation(fields: [account_id], references: [account_id], onDelete: Cascade)
  players1      MyPlayers  @relation("SquadPlayer1", fields: [squad_player1], references: [myPlayer_id], onDelete: Cascade)
  players2      MyPlayers  @relation("SquadPlayer2", fields: [squad_player2], references: [myPlayer_id], onDelete: Cascade)
  players3      MyPlayers  @relation("SquadPlayer3", fields: [squad_player3], references: [myPlayer_id], onDelete: Cascade)

  @@map("Squad")
}

